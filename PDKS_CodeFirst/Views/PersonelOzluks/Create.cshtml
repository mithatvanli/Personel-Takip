@model PDKS_CodeFirst.Entity.PersonelOzluk

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/_pdks.cshtml";
}

<script src="~/Scripts/jquery-3.3.1.min.js"></script>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">

    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Adi, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(model => model.Adi, new { htmlAttributes = new { @class = "form-control border-secondary" } })
            @Html.ValidationMessageFor(model => model.Adi, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Soyadi, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(model => model.Soyadi, new { htmlAttributes = new { @class = "form-control border-secondary" } })
            @Html.ValidationMessageFor(model => model.Soyadi, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TcKimlik, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(model => model.TcKimlik, new { htmlAttributes = new { @class = "form-control border-secondary" } })
            @Html.ValidationMessageFor(model => model.TcKimlik, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.Telefon, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4 table-bordered border-dark">
            @Html.EditorFor(model => model.Telefon, new { htmlAttributes = new { @class = "form-control border-secondary", @type = "text", @name = "txtInput", @onkeydown = "javascript:backspacerDOWN(this,event);", @onkeyup = "javascript:backspacerUP(this,event);" } })
            @*<input class="form-control" type="text" name="txtInput" onkeydown="javascript:backspacerDOWN(this,event);" onkeyup="javascript:backspacerUP(this,event);" />*@
            @Html.ValidationMessageFor(model => model.Telefon, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DogumTarihi, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(model => model.DogumTarihi, new { htmlAttributes = new { @class = "form-control border-secondary" } })
            @Html.ValidationMessageFor(model => model.DogumTarihi, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DepartmanId, "Departman Adı", htmlAttributes: new { @class = "control-label col-md-2 " })
        <div class="col-md-4">
            @Html.DropDownList("DepartmanId", null, htmlAttributes: new { @class = "form-control border-secondary border-secondary" })
            @Html.ValidationMessageFor(model => model.DepartmanId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Unvan, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(model => model.Unvan, new { htmlAttributes = new { @class = "form-control border-secondary" } })
            @Html.ValidationMessageFor(model => model.Unvan, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.KurumSicil, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(model => model.KurumSicil, new { htmlAttributes = new { @class = "form-control border-secondary" } })
            @Html.ValidationMessageFor(model => model.KurumSicil, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.EPosta, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(model => model.EPosta, new { htmlAttributes = new { @class = "form-control border-secondary" } })
            @Html.ValidationMessageFor(model => model.EPosta, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MedeniDurum, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(model => model.MedeniDurum, new { htmlAttributes = new { @class = "form-control border-secondary" } })
            @Html.ValidationMessageFor(model => model.MedeniDurum, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.EvAdresi, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(model => model.EvAdresi, new { htmlAttributes = new { @class = "form-control border-secondary" } })
            @Html.ValidationMessageFor(model => model.EvAdresi, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Askerlik, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(model => model.Askerlik, new { htmlAttributes = new { @class = "form-control border-secondary" } })
            @Html.ValidationMessageFor(model => model.Askerlik, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IseGiris, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(model => model.IseGiris, new { htmlAttributes = new { @class = "form-control border-secondary" } })
            @Html.ValidationMessageFor(model => model.IseGiris, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Ehliyet, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(model => model.Ehliyet, new { htmlAttributes = new { @class = "form-control border-secondary" } })
            @Html.ValidationMessageFor(model => model.Ehliyet, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Engelli, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            <div class="checkbox">
                @Html.EditorFor(model => model.Engelli)
                @Html.ValidationMessageFor(model => model.Engelli, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <br />
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Ekle" class="btn btn-success" />
            @Html.ActionLink("Listeye Dön", "Index", "", new { @class = "btn btn-info" })
        </div>
    </div>
</div>
}
<script src="~/Scripts/Tarih.js"></script>
